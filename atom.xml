<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[emrullah]]></title>
  <link href="//emrullah-arsay.github.io/atom.xml" rel="self"/>
  <link href="//emrullah-arsay.github.io/"/>
  <updated>2016-08-24T05:48:44+03:00</updated>
  <id>//emrullah-arsay.github.io/</id>
  <author>
    <name><![CDATA[emrullah]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to Cybele]]></title>
    <link href="//emrullah-arsay.github.io/blog/2016/08/23/how-to-cybele-dot/"/>
    <updated>2016-08-23T20:58:13+03:00</updated>
    <id>//emrullah-arsay.github.io/blog/2016/08/23/how-to-cybele-dot</id>
    <content type="html"><![CDATA[<p>Cybele is not an anatolian goddess, actually it is but we&rsquo;re not talking about her.We&rsquo;re talking about a rails gem.It&rsquo;s an
awesome tool to start a new project.It has everything you need when you develop a professional website.In short, it is a starting template.</p>

<!-- more -->


<p>Before I start I have to mention my friend mrk because he inspired me to write this.Since he does not seem to write an english
version of his,I feel obligated to write for developers all around the world.Ä±f you wanna read his stuff, click <a href="http://www.muratrahmikurtul.com">here</a></p>

<p>Here we go, first we need to install redis and sidekiq to take care background jobs and cybele works in rails 4.2.x versions right now if you&rsquo;re using Rails 5 or one of older versions you need to change it to 4.2.After that just install cybele gem using:</p>

<pre><code>gem install cybele
</code></pre>

<p>Then just start a project by writing:</p>

<pre><code>cybele project_name
</code></pre>

<p>on your terminal.Then set your local environment variables and access token in config/initializers/rollbar.rb.</p>

<pre><code>ROOT_PATH=http://localhost:3000
SMTP_PASSWORD=
SMTP_USER_NAME=admin@deneme.com
SMTP_ADDRESS=smtp.sendgrid.net

BASIC_AUTH_IS_ACTIVE=no
S3_BUCKET_NAME=deneme-v3-staging
AWS_RAW_URL=deneme-v3-staging.s3.amazonaws.com
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
</code></pre>

<p>You can get detailed info about setting your local variables from <a href="http://railsapps.github.io/rails-environment-variables.html">here</a>.After that in your migration folder set your default values for <strong>is_active</strong> and
<strong>time_zone</strong> variables in Admin and User models.Be sure that you do this changes before the <em>rake db:migrate</em> command.</p>

<p><img src="//emrullah-arsay.github.io/images/pic2.jpg" alt="migratepic" /></p>

<p>After setting the migration file, change username and password in /config/settings.yml as you like.Then  in public folder run this command</p>

<pre><code>ln -s ../VERSION.txt VERSION.txt
</code></pre>

<p>This was the final step if you know how to use postrgresql because cybele uses postgresql.If you don&rsquo;t have postgresql,you can install by running this command on your terminal</p>

<pre><code>sudo apt-get update
sudo apt-get install postgresql postgresql-contrib
</code></pre>

<p>If you already have it, open the psql using this command</p>

<pre><code>sudo -u postgres psql
</code></pre>

<p>After that you need to create a database and a user.Before this step just be sure that you add a username and a password in your <strong>config/database.yml</strong> file.When you are creating a database,database name should match on your database name in database.yml file.If probably be like name_of_your_app_ development.So you should run a command like this</p>

<pre><code>CREATE DATABASE "project_name_development";
</code></pre>

<p>When creating user</p>

<pre><code>CREATE USER user_name WITH PASSWORD 'password' 
</code></pre>

<p>after this we need to alter our user as superuser</p>

<pre><code>ALTER USER user_name WITH SUPERUSER
</code></pre>

<p>Now we can leave our psql writing <em>/q</em> or simply using ctrl+d and creat our database and migrate it using</p>

<pre><code>rake db:create
rake db:migrate
rake dev:seed
</code></pre>

<p>Finally we can run the server but before that make sure you run the redis each time because redis is back tracking our app.So run this</p>

<pre><code>redis-server
</code></pre>

<p>aaand</p>

<pre><code>rails s
</code></pre>

<p>tadaaa</p>

<p><img src="//emrullah-arsay.github.io/images/well.jpg" alt="welcomepage" /></p>

<p>You can wonder its admin panel just using</p>

<pre><code>0.0.0.0:3000/hq
</code></pre>

<p>the password and and username is in seeds.rb file, that&rsquo;s because you sholdn&rsquo;t forget to run <em>rake dev:seed</em></p>

<p>Thanks for reading..</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Second Day at Workshop]]></title>
    <link href="//emrullah-arsay.github.io/blog/2016/08/01/second-day-at-workshop/"/>
    <updated>2016-08-01T03:29:50+03:00</updated>
    <id>//emrullah-arsay.github.io/blog/2016/08/01/second-day-at-workshop</id>
    <content type="html"><![CDATA[<p>     We started to second day with simple html lesson.As all we know Html is a markup language using for websites.It stands for HyperText Markup Language and it is a milestone for  web pages because everything in the internet uses this language.All other languages or tools you know like php, .net, rails are just a tool for transforming our code to HTML.because of that knowing html is most important thing for a web developper.After we finished talking about html we passed on another tool we use in rails environment to transform our code to html.It is a gem called Haml.  
</p>


<p>     Haml is a templating engine that makes you write html easily.It eliminates unnecessary tag system
and uses indentation to  tidy up your code.By removing the unnecessary tags it makes your code cleaner 
and easy to understand.
</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%nav.navbar.navbar-default
</span><span class='line'>        .container-fluid
</span><span class='line'>          / Brand and toggle get grouped for better mobile display
</span><span class='line'>          .navbar-header
</span><span class='line'>            %button.navbar-toggle.collapsed{"aria-expanded" => "false", "data-target" => "#bs-example-navbar-collapse-1", "data-toggle" => "collapse", :type => "button"}
</span><span class='line'>              %span.sr-only Toggle navigation
</span><span class='line'>              %span.icon-bar
</span><span class='line'>              %span.icon-bar
</span><span class='line'>              %span.icon-bar
</span><span class='line'>           = link_to 'Blog', root_path, class: 'navbar-brand'</span></code></pre></td></tr></table></div></figure>


<p></p>

<!-- more -->


<p>     Here is some  haml example code we wrote in class.We tried to write a navigation bar for our blog website.As you can see tagnames didnt change.We just used different characters to write the tags.
</p>


<p> Css was the other subject we mentioned that day.As you know css is the other important part of web developing along with JavaScript.Css stands for cascading style sheets and often used to set the visual stle of webpages and styling the pages.
</p>


<p> In class we found opportunity to practice our css skills.Ms. Kapi told us to  create a html button without using bootsrap.The example code what we did is given down below.
</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.btn {
</span><span class='line'>        border-radius: 28px;
</span><span class='line'>        font-family: Arial;
</span><span class='line'>        color: #ffffff;
</span><span class='line'>        font-size: 20px;
</span><span class='line'>        background: #d91a1a;
</span><span class='line'>        padding: 10px 20px 10px 20px;
</span><span class='line'>        text-decoration: none;
</span><span class='line'>      }</span></code></pre></td></tr></table></div></figure>


<p> After these small assignments we pass on the other subjects like bootstrap and sass.We mentioned about how we import to use css and bootstrap files.How we change the extensions of the files.That's what I'm gonna talk about now.Befor using Css or bootstrap we have to import the css file we're workin on the application.css file.Regarding the tool what we use, we have to change the extebsion of the files including the application.css file.If we're going to use pure bootstrap and css we change it to style.css.scss.If we're going to use sass we change it the extension to style.css.sass  
</p>


<h4>Sass</h4>


<p> So the sass is another tool for styling web pages and interpret into css.It stands for Syntactically Awesome Stylesheets.The official implementation of Sass is open-source and coded in Ruby; however, other implementations exist, including PHP, and a high-performance implementation in C called libSass.  
</p>


<p> Best things about sass are the mechanisms that it provides us.First of all you can write cleaner css code in sass.It also gets rid of the unnecessary  characters and leaves easier and cleaner code. 
</p>


<p>This is how it looks a simple css code:</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.content-navigation {
</span><span class='line'>  border-color: #3bbfce;
</span><span class='line'>  color: darken(#3bbfce, 10%);
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.border {
</span><span class='line'>  padding:  16px ;
</span><span class='line'>  margin:  16px;
</span><span class='line'>  border-color: #3bbfce;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>This is the sass version the same code:</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.content-navigation 
</span><span class='line'>  border-color: #3bbfce;
</span><span class='line'>  color: darken(#3bbfce, 10%);
</span><span class='line'>
</span><span class='line'>.border
</span><span class='line'>  padding:  16px ;
</span><span class='line'>  margin:  16px;
</span><span class='line'>  border-color: #3bbfce;</span></code></pre></td></tr></table></div></figure>


<h5>Variables</h5>


<p> Unlike the css, sass has the ability to store information within your stylesheet. You can store things like colors, font stacks, or any CSS value you think you'll want to reuse.Sass uses the $ symbol to make something a variable. Here's an example:
</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$font-stack:    Helvetica, sans-serif;
</span><span class='line'>$primary-color: #333;
</span><span class='line'>
</span><span class='line'>body 
</span><span class='line'>  font: 100% $font-stack;
</span><span class='line'>  color: $primary-color;</span></code></pre></td></tr></table></div></figure>


<h4>Nesting</h4>


<p> Like haml and html codes, sass lets you nest the objects within each other so you dont have to use 
unique ids and classes.It allows you to design every object differenly even the same kind of objects.  
</p>


<p>In sass style your code would look like this</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>table.hl 
</span><span class='line'>  margin: 2em 0
</span><span class='line'>  td.ln 
</span><span class='line'>    text-align: right
</span><span class='line'>  
</span><span class='line'>li 
</span><span class='line'>  font: 
</span><span class='line'>    family: serif
</span><span class='line'>    weight: bold
</span><span class='line'>    size: 1.3em</span></code></pre></td></tr></table></div></figure>


<p>But in css style:</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>table.hl {
</span><span class='line'>  margin: 2em 0;
</span><span class='line'>}
</span><span class='line'>table.hl td.ln {
</span><span class='line'>  text-align: right;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>li {
</span><span class='line'>  font-family: serif;
</span><span class='line'>  font-weight: bold;
</span><span class='line'>  font-size: 1.3em;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<h4>Mixins</h4>


<p> In CSS any repeating code in your stylesheet must must written over and over again.Another awesom mechanism that Sass gave us is mixins.You can store your repeated codes in mixins and when you are using it you can use just the mixins names.Just like the functions, you can even pass some parameters in your mixins to mame your mixins more flexible.Here's an example for border-radius.</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>=border-radius($radius)
</span><span class='line'>  -webkit-border-radius: $radius
</span><span class='line'>  -moz-border-radius:    $radius
</span><span class='line'>  -ms-border-radius:     $radius
</span><span class='line'>  border-radius:         $radius
</span><span class='line'>
</span><span class='line'>.box
</span><span class='line'>  +border-radius(10px)</span></code></pre></td></tr></table></div></figure>


<h4>Inheritance</h4>


<p>In Sass, inheritance is achieved by inserting a line inside of a code block that uses the @extend keyword and references another selector. The extended selector's attributes are applied to the calling selector.</p>


<p>Here is an example of how we can use extend keyword:</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.error
</span><span class='line'>  border: 1px #f00
</span><span class='line'>  background: #fdd
</span><span class='line'>
</span><span class='line'>.error.intrusion 
</span><span class='line'>  font-size: 1.3em
</span><span class='line'>  font-weight: bold
</span><span class='line'>
</span><span class='line'>.badError 
</span><span class='line'>  @extend .error
</span><span class='line'>  border-width: 3px</span></code></pre></td></tr></table></div></figure>


<p>This code would look like this in classic CSS style</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.error, .badError {
</span><span class='line'>  border: 1px #f00;
</span><span class='line'>  background: #fdd;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.error.intrusion,
</span><span class='line'>.badError.intrusion {
</span><span class='line'>  font-size: 1.3em;
</span><span class='line'>  font-weight: bold;
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>.badError {
</span><span class='line'>  border-width: 3px;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<h3>Compass</h3>


<p>Compass is an open-source CSS authoring framework that supports sass make writing stylesheets powerful and easy.Compass also allows you to get rid of unnecassary repetitions in your style sheet with sass it gives you more powerful ann cleaner code structure.</p>


<p>Here is some some sass code with compass:</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>@import compass/css3
</span><span class='line'> 
</span><span class='line'>@import compass/utilities
</span><span class='line'> 
</span><span class='line'>#demo
</span><span class='line'>  +clearfix
</span><span class='line'> 
</span><span class='line'>.border-radius-example
</span><span class='line'>  width: 125px
</span><span class='line'>  height: 125px
</span><span class='line'>  background: red
</span><span class='line'>  margin: 20px
</span><span class='line'>  float: left
</span><span class='line'>  padding: 5px
</span><span class='line'> 
</span><span class='line'>#border-radius
</span><span class='line'>  +border-radius(25px)
</span><span class='line'> 
</span><span class='line'>#border-radius-top-left
</span><span class='line'>  +border-top-left-radius(25px)
</span><span class='line'> 
</span><span class='line'>#border-radius-top-right
</span><span class='line'>  +border-top-right-radius(25px)
</span><span class='line'> 
</span><span class='line'>#border-radius-bottom-left
</span><span class='line'>  +border-bottom-left-radius(25px)
</span><span class='line'> 
</span><span class='line'>#border-radius-bottom-right
</span><span class='line'>  +border-bottom-right-radius(25px)
</span><span class='line'> 
</span><span class='line'>#border-radius-top
</span><span class='line'>  +border-top-radius(25px)
</span><span class='line'> 
</span><span class='line'>#border-radius-bottom
</span><span class='line'>  +border-bottom-radius(25px)
</span><span class='line'> 
</span><span class='line'>#border-radius-left
</span><span class='line'>  +border-left-radius(25px)
</span><span class='line'> 
</span><span class='line'>#border-radius-right
</span><span class='line'>  +border-right-radius(25px)
</span><span class='line'> 
</span><span class='line'>#border-radius-combo
</span><span class='line'>  +border-corner-radius(top, left, 40px)
</span><span class='line'>  +border-corner-radius(top, right, 5px)
</span><span class='line'>  +border-corner-radius(bottom, left, 15px)
</span><span class='line'>  +border-corner-radius(bottom, right, 30px)</span></code></pre></td></tr></table></div></figure>


<p>this is the same code in css, look how long it looks </p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#demo {
</span><span class='line'>  overflow: hidden;
</span><span class='line'>  *zoom: 1;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>.border-radius-example {
</span><span class='line'>  width: 125px;
</span><span class='line'>  height: 125px;
</span><span class='line'>  background: red;
</span><span class='line'>  margin: 20px;
</span><span class='line'>  float: left;
</span><span class='line'>  padding: 5px;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>#border-radius {
</span><span class='line'>  -moz-border-radius: 25px;
</span><span class='line'>  -webkit-border-radius: 25px;
</span><span class='line'>  border-radius: 25px;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>#border-radius-top-left {
</span><span class='line'>  -moz-border-radius-topleft: 25px;
</span><span class='line'>  -webkit-border-top-left-radius: 25px;
</span><span class='line'>  border-top-left-radius: 25px;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>#border-radius-top-right {
</span><span class='line'>  -moz-border-radius-topright: 25px;
</span><span class='line'>  -webkit-border-top-right-radius: 25px;
</span><span class='line'>  border-top-right-radius: 25px;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>#border-radius-bottom-left {
</span><span class='line'>  -moz-border-radius-bottomleft: 25px;
</span><span class='line'>  -webkit-border-bottom-left-radius: 25px;
</span><span class='line'>  border-bottom-left-radius: 25px;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>#border-radius-bottom-right {
</span><span class='line'>  -moz-border-radius-bottomright: 25px;
</span><span class='line'>  -webkit-border-bottom-right-radius: 25px;
</span><span class='line'>  border-bottom-right-radius: 25px;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>#border-radius-top {
</span><span class='line'>  -moz-border-radius-topleft: 25px;
</span><span class='line'>  -webkit-border-top-left-radius: 25px;
</span><span class='line'>  border-top-left-radius: 25px;
</span><span class='line'>  -moz-border-radius-topright: 25px;
</span><span class='line'>  -webkit-border-top-right-radius: 25px;
</span><span class='line'>  border-top-right-radius: 25px;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>#border-radius-bottom {
</span><span class='line'>  -moz-border-radius-bottomleft: 25px;
</span><span class='line'>  -webkit-border-bottom-left-radius: 25px;
</span><span class='line'>  border-bottom-left-radius: 25px;
</span><span class='line'>  -moz-border-radius-bottomright: 25px;
</span><span class='line'>  -webkit-border-bottom-right-radius: 25px;
</span><span class='line'>  border-bottom-right-radius: 25px;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>#border-radius-left {
</span><span class='line'>  -moz-border-radius-topleft: 25px;
</span><span class='line'>  -webkit-border-top-left-radius: 25px;
</span><span class='line'>  border-top-left-radius: 25px;
</span><span class='line'>  -moz-border-radius-bottomleft: 25px;
</span><span class='line'>  -webkit-border-bottom-left-radius: 25px;
</span><span class='line'>  border-bottom-left-radius: 25px;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>#border-radius-right {
</span><span class='line'>  -moz-border-radius-topright: 25px;
</span><span class='line'>  -webkit-border-top-right-radius: 25px;
</span><span class='line'>  border-top-right-radius: 25px;
</span><span class='line'>  -moz-border-radius-bottomright: 25px;
</span><span class='line'>  -webkit-border-bottom-right-radius: 25px;
</span><span class='line'>  border-bottom-right-radius: 25px;
</span><span class='line'>}
</span><span class='line'> 
</span><span class='line'>#border-radius-combo {
</span><span class='line'>  -moz-border-radius-topleft: 40px;
</span><span class='line'>  -webkit-border-top-left-radius: 40px;
</span><span class='line'>  border-top-left-radius: 40px;
</span><span class='line'>  -moz-border-radius-topright: 5px;
</span><span class='line'>  -webkit-border-top-right-radius: 5px;
</span><span class='line'>  border-top-right-radius: 5px;
</span><span class='line'>  -moz-border-radius-bottomleft: 15px;
</span><span class='line'>  -webkit-border-bottom-left-radius: 15px;
</span><span class='line'>  border-bottom-left-radius: 15px;
</span><span class='line'>  -moz-border-radius-bottomright: 30px;
</span><span class='line'>  -webkit-border-bottom-right-radius: 30px;
</span><span class='line'>  border-bottom-right-radius: 30px;
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>




<p>Other part of the day we contiuned  to learn cybele gem. Mr Akbudak, first explained us, how user managament part works.We looked over the every part of user managment system.After that we fix the error we saw from the other day.We changed the name  of user profile file in conrtrollee</p>


<p>To solve profile update error we changed some miswriting in the progile_controller in user file.
Here is the changes we did </p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>1   def show
</span><span class='line'>2     add_breadcrumb @profile.full_name, user_profile_path
</span><span class='line'>3     respond_with([:user, @profile])    
</span><span class='line'>4   end</span></code></pre></td></tr></table></div></figure>


<p>We deleted the square brackets in third line and we did the same for the update action in the same file</p>


<p>Some part of the lesson we learned to send messages to users in this case to admins.We learned to send to send a welcome message  after adding a new admin.To do that we added a new function to admin_mailer class.Ä°t takes admin's Id, finds the admin and sets to email adres and subject </p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def welcome(admin_id)
</span><span class='line'>    @admin      = Admin.find admin_id
</span><span class='line'>    @subject =t('email.admin.welcome.title')
</span><span class='line'>    mail(to: @admin.email, subject: @subject)
</span><span class='line'>  end</span></code></pre></td></tr></table></div></figure>


<p>After that we added an another fuction called send_welcome_message to send a message what we want and within this we call the welcome function what we write in the admin_mailer.rb file.To show a messaga we want we create  a file with the same name in the other function in the admin_mailer which is welcome.
 </p>


<p> <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>def welcome_message_send
</span><span class='line'>    AdminMailer.welcome(self.id).deliver_later!
</span><span class='line'>  end</span></code></pre></td></tr></table></div></figure></p>

<p>This is the function we write in models</p>


<p> <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>%h2= t(&lsquo;Welcome To Page&rsquo;)</span></code></pre></td></tr></table></div></figure></p>

<p>This is the simple view file to show the message we send.And don forget to add your function after commit action because that what sends your message to created admin.</p>


<p> <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>after_commit :send_login_info,:welcome_message_send, on: :create</span></code></pre></td></tr></table></div></figure></p>

<P>We continued some coding like thise for a while after that we learned how to deploy our app to heroku
</P>


<p>We dowloaded and installed heroku toolbelt with code down below.It took a lot of our time to install.
At the end, I couldn't even use because I got an error.So Ä± couldn't login to heroku.I had to just listen to class instead of doing it..:(</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>wget -O- https://toolbelt.heroku.com/install-ubuntu.sh | sh</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>As I learned after we install, we needed to clone our project to git if we're using git to deploy.Theb we got into our prject folder and use create command for heroku</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>heroku create</span></code></pre></td></tr></table></div></figure>


<p> When we create an app, a git remote (called heroku) is also created and associated with your local git repository.
    Heroku generates a random name for your app, or you can pass a parameter to specify your own app 
name.After that we deploy our project with this code    
</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git push heroku master</span></code></pre></td></tr></table></div></figure>


<p>The project is now deployed.To open project we deploy, we just run the code:</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>heroku open</span></code></pre></td></tr></table></div></figure>


<p>This wasn't all i learn from workshop but just all I can write here.Again I am really 
appreciated for all my theacher's efforts and time that they spare from their actual jobs.And thank you giving me some homeworks to keep me doing something important other than playing Dark Souls and FarCry.I haven't got the chancew to practice cybele yet but  I am eager to learn more about it.</p>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hello Workshop]]></title>
    <link href="//emrullah-arsay.github.io/blog/2016/07/30/hello-workshop/"/>
    <updated>2016-07-30T16:24:26+03:00</updated>
    <id>//emrullah-arsay.github.io/blog/2016/07/30/hello-workshop</id>
    <content type="html"><![CDATA[<p> When I heard the workshop for the first time i thought it will be  a few simple classes and some 
simple code samples and that's all.But that was not..In the contrary we've had condensed and mind   dazzling lessons from scracth to the end of the project till  publishing a web project.Did Ä± understand
something is that's what i'm gonna trying to tell you now..</p>


<p> By scracth, I mean we really start from the very early moments of a ruby project's life and before 
that we even examined the birth of ruby, ruby environment and deep network classes.Let me tell you somethings about ruby and ruby environment what i learned from Mr. Tayfun's lesson.</p>


<p></p>

<p>Ruby is an object oriented, dinamic and in my opinion it's functional language  maybe not as much as
matlab or else but when i learning ruby that was my first impression which i really liked that feature and the ease of writin code with it really made me love it.As we learned, ruby's purpose was fun and fast production for programmer.</p>


<!-- more -->


<p>Mr. Tayfun didnt tell much about ruby because we're working on it for a long time but he mentioned a 
lot of things about ruby and rails framwork such as gems ,ruby toolbox, bundler,git,git-flow, association in rails class and more..Later we talked about rbenv which is a simple version mangement tool.He told us opening any version of ruby applications by using global and local keywords.</p>


<p><img src="//emrullah-arsay.github.io/images/rbenv/rbnvlocal.jpg" width="600" height="400" title="pic" alt="picc"></p>

<p> <p>Local keyword is changing your ruby version in your local folder.So you can use any version you l,ke
 in your project.</p></p>

<p><img src="//emrullah-arsay.github.io/images/rbenv/rbnvglobal.jpg" width="600" height="400" title="pic" alt="picc"></p>

<p>Global keyword is changing your ruby version completely thus you have to your new ruby version in 
all ohter folder unless you use local keyword.</p>


<p> <p>And  there is another keyword which is shell.You can use this keyword when you want to change your
ruby version only in the terminal you are using.</p></p>

<p><img src="//emrullah-arsay.github.io/images/rbenv/rbnvshell.jpg" width="600" height="400" title="pic" alt="picc"></p>

<h4>Gems</h4>


<p>A gem is tool and library file that we use when we creating our rails app.Each gem has its own 
purpose.Some of 'em  are using for stylin such bootstap gem,sass gem etc. some are using for managing user account system like devise.There is a lot of gems we can use for almost every purpose.The real question is how do we find the gem for things what we want to do.The answer is  The Ruby Toolbox.
Go www.ruby-toolbox.com and search the keyword of your action.There is a lot of option and good explanations there.For example you want your app to perform backup operations.Go to ruby-toolbox.com
searcg for backup.Try to choose most used and newest gems because they are the good ones.:).Read the documantations about gems you want cause all search results may not serve for one purpose.</p>


<p> <p>At this point we&rsquo;ve given our first homework about gem files versioning system which is about to
Semantic Versioning.I am gonna tell a bit about semver.Semantic Versioning is three segment versionnig system called Major, Minor and Patch.</p></p>

<p>Patch version increase when you do simple changes or reported bugfixes that does not effect 
application's structure.</p>


<p>Minor version increase when you add new functionality or fixing mass errors.This also doesn't affect 
your app's compatibilty.</p>


<p>Major version changes when you make structural changes or add incompatible api changes.</p>




<p>Now we can examine ruby gems versioning system.lets look  at some examples.</p>


<pre><code>        #gemspec
        spec.add_runtime_dependency 'library', '&gt;=2.2.0'

        #bundler
        gem 'library', '&gt;= 2.2.0'
</code></pre>

<p> <p>when you bundle this code you&rsquo;ll get version 2.2.0 and higher versions of library gem thus you
can&rsquo;t ecpect to get version 2.1.0&rsquo;s features. This is called optimistic version constraint.It says all changes from 2.x will work but higher versions then 3.o may not work.
        The alternative is using other versioning system called pessimistic.In this concept you can
exclude the version that might break your code.Here is an example of the pessimistic concept</p>  <br/>
        <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>#gemspec
</span><span class='line'>          spec.add_runtime_dependency &lsquo;library&rsquo;, [&lsquo;>=2.2.0&rsquo;,&lsquo;&lt;=3.0&rsquo;]
</span><span class='line'>          #bundler
</span><span class='line'>          gem &lsquo;library&rsquo;, &lsquo;>= 2.2.0&rsquo; , &lsquo;&lt;=3.0&rsquo;</span></code></pre></td></tr></table></div></figure></p>

<p>When you bundle this  you'll get the features just the versions between 2.2.0 and 3.0.</p>


<p> From here I want to pass the second homework we've given which is about git-flow and talk a little
bit about this.</p>


<p>Git flow is branching model amd management strategy of the project that helps developer keep track 
of features , hot-fixes and releases in bigger software projects.It also prevents developing errors from mixing with the release branch.</p>


<p>Git-flow has 2 different type of main  branches.First main branch branch is the master branch that is
using for produuction branch.It containes ready and working version of project and it last forever with the updates of projects.Second main branch is develop branch.Develop branch contains last changes for the next version.Develop branch is also called 'Integration Branch'.When the code in this branch is consistent, all changes merge with the master branch.There is also supporting branches that is using for simultaniosly work on same files among the team members,preparing project for publish and fixing production problems quickly.</p>




<ul>
   <li>Feature Branches</li>
   <li>Release Branches</li>
   <li>Hotfix Branches</li>
</ul>




<h5>Feature Branches</h5>


<p>when we develop new features for the next versions we use develop branches.when we start to
 developing the feauture we might nor know the version number or version tag.This branch exists till the ffeature finished.When developing is finished, it can be merged with the develop branch.</p>


<h5>Release Branches</h5>


<p> <p>These branches supports preparing new production versions.When we publish new version of our app
 we use  tihs branch and make last changings such as changing the version number.</p>
 <h5>Hotfix Branches</h5>
 <p>When  we discover a critical error on the published version and we need to solve immediately, we use hotfix branches.We solve the probleÃ¶ on these branches and we merge with both develop and master brancjes.</p>
 <img src="//emrullah-arsay.github.io/images/git-flow_480.png" width="600" height="400" title="pic" alt="picc"></p>

<h3>Installation of Git-flow</h3>


<p></p>

<p> For  Homebrew users with the code down below it easily can install.</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>brew install git-flow</span></code></pre></td></tr></table></div></figure>


<p> To start using git flow by initializing it inside an git repository </p>


<p></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git flow init</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>You'll have to answer a few questions regarding the naming conventions for your branches.It's 
recommended to use the default values.  </p>




<p>To start a new feature, we haave to start from develop branch and to start developing a new 
feature with :</p>


<p></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git flow feature start MYFEATURE</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>This action creates a new freature branch based on develop and switches to it.When we finish the 
development of the feature, we use the code down below;</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git flow feature finish MYFEATURE</span></code></pre></td></tr></table></div></figure>


<p>This code merges MYDEATURE  into developing branch and removes feature branch.</p>


<p>To publish the feature you develop to remote server so it can be used by other users, we use 
the code given down below;</p>


<p></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git flow feature publish MYFEATURE</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>if you want to get a feature published by another user,</p>


<p></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git flow feature pull origin MYFEATURE</span></code></pre></td></tr></table></div></figure>


<p>And you can easily track a feature on origin by using</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git flow feature track MYFEATURE</span></code></pre></td></tr></table></div></figure>


<p>Ä°f you want to start a release branch,you can use git flow commands too.The command creates a 
new realese branch created from the develop branch. </p>


<p></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git flow release start RELEASE [BASE]</span></code></pre></td></tr></table></div></figure>


<p>It's wise to publish the release branch after creating it to allow release commits by other 
developers.</p>


<p></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git flow release publish RELEASE</span></code></pre></td></tr></table></div></figure>


<p>Similar to feature you can track the release by using</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git flow release track RALEASE</span></code></pre></td></tr></table></div></figure>


<p>To finish the release and mergin into master branch, we use</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git flow release finish RELEASE</span></code></pre></td></tr></table></div></figure>


<p>with this code, tags the release branch with its name,removes the release branch.Dont forget to
push your tags with</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git push --tags</span></code></pre></td></tr></table></div></figure>


<p>like the othr git flow commands, if you want to open hotfix branch we use</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git flow hotfix start VERSION [BASENAME]</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>The version keyword marks the new hotfix release name.Optionally you can speciify a basename to start from.</p>


<p>By finishing a hotfix iy gets merged back into develop and master branches.</p>


<p></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git flow hotfix finish VERSION</span></code></pre></td></tr></table></div></figure>


<p> Finally  I finished my homework and I can get to other subjects.Another subject Mr Tayfun's mention 
is interpreted and compiled programming languages and difference between them.A compiled language is written in a code that can be executed directly on a computer's processor.This is because a compiler has translated the code into the computer's native language upfront,well before the program is even run.Intrepreted language is any programming language that is not already in machine languade  before the runtime.Unlike the compiled languages translation does not happen before.Translation to machine laguage happens at the same time as the program being executed. </p>


<p> <p>Now it time some network classes cause it was one of the many subjects that Mr Tayfun&rsquo;s meentioned.
I want to tell you upfront, most of the things I am gonna tell from here are the things that Ä± dont have much knowledge about.So I had to search and learn again.</p></p>

<p>Before i  tell about networks, one subject left from Mr Tayfun's lesson.Its design patterns.Design 
patterns are solutions to problems that you encounter repeatedly when you coding or designing the projects.These patterns are have to be reusable and easy to apply.THis is all i can tell about the design patterns cause its wide and very long subject so if you need any resource it's recommnded to use book of gang of four.I know.It's wierd nickname but just google it.You'll see. </p>


<h4>ORM</h4>


<p>ORM is acronym for object relational mapping.ORM in computer software is a programming technic for 
converting data between incompatible type systems iin OOP languages.This creates  a virtual object database that can be used fram within the programming language.Active record is the ORM framework for Rubu on Rails environment.Active record is model part of the MVC(Model-View-Conroller) which is the layer of the system responsible for representing business data and logic.</p>


<p></p>

<p>After the ORM and DP, when we're learning the Active record we jump into C part of the MVC which is 
controller.We learn the structure of controller and learn some about association.</p>


<p>In rails there are a few type of association</p>


<ul>
    <li>belogns_to</li>
    <li>has_one</li>
    <li>has_many</li>
    <li>has_many :through</li>
    <li>has_one :through</li>
    <li>has_and_belongs_to_many</li>
</ul>


<h5>belong_to Association</h5>


<p>We use this when a model is belons to other model.:).For example a book is always belogs to a 
author model.</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Book &lt; ApplicationRecord
</span><span class='line'>      belongs_to :author
</span><span class='line'>  end</span></code></pre></td></tr></table></div></figure>


<p>In rails belongs to operator has to be singular term. if you don't you would get an error.That's be
cause it's rails convention.</p>


<h5>has_one Associaton</h5>


<p>This association is usin for one  to one connection for another model.For example if every supplier 
has one account  in yor app, the association would look like this:</p>


<p></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Supplier &lt; ApplicationRecord
</span><span class='line'>      has_one :account
</span><span class='line'>  end</span></code></pre></td></tr></table></div></figure>


<p></p>

<h5>has_many Association</h5>


<p>This kind of association is us,ng for one to many connections with another model.You'll often find 
this association on the other side of the belongs_to association.For instance in a project an author has a lot of book like in real life.This model would look like ;</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Author &lt; ApplicationRecord
</span><span class='line'>      has_many :books
</span><span class='line'>  end</span></code></pre></td></tr></table></div></figure>




<p>As you can see in the code above, we used pluralized model and wrote 'books'.This is another
convention of Rails.</p>




<h4>has_many :through Association</h4>


<p>A "has_many :through" association is often used to set up many to many connection between two 
models. Let's assume a school system.A teacher has many students and a studebts has a lot of classes.
In this system your models shoul lok like this;</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class Teacher &lt; ApplicationRecord::Base
</span><span class='line'>              has_many :classes
</span><span class='line'>              has_many :students through => :classes
</span><span class='line'>          end
</span><span class='line'>
</span><span class='line'>          class Student &lt; ApplicationRecord::Base
</span><span class='line'>              has_many :classes
</span><span class='line'>              has_many :teachers through => :classes
</span><span class='line'>          end
</span><span class='line'>
</span><span class='line'>          class Classes &lt; ApplicationRecord::Base
</span><span class='line'>              belogns_to :student
</span><span class='line'>              belongs_to :teacher
</span><span class='line'>          end</span></code></pre></td></tr></table></div></figure>


<H3>Polymorphic Association</H3>


<p>With this association, a model can belong to more than one other kind of model record.So the single
 instance of your model for example a book can belong to and belong to library  also it can belong to author..</p>


<p> <p>Let&rsquo;s assume a project that has user system and users have differnt types.So we have user which is
 normal user and bussiness which is the other kind of user.For this system model should look l,ke this;
 </p>     <br/>
 <figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>class User &lt; ApplicationRecord::Base
</span><span class='line'>              has_one :profile, as: :profileable
</span><span class='line'>          end
</span><span class='line'>
</span><span class='line'>          class Bussines &lt; ApplicationRecord::Base
</span><span class='line'>              has_one :profile, as: :profileable
</span><span class='line'>          end
</span><span class='line'>
</span><span class='line'>          class Profile &lt; ApplicationRecord::Base
</span><span class='line'>              blelongs_to :profileable, polymorphic: true
</span><span class='line'>          end</span></code></pre></td></tr></table></div></figure></p>

<p>If you look careful you can see we have 'magical' keyword called profileable. It's again a rails 
convention to use object's name and add the word able to the end.So profile will bevome profileable.
This relationship can be easily generated using the code below;</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rails g model Profile name:string:index profileable:references(polymorphic)</span></code></pre></td></tr></table></div></figure>


<p> For the sake of my few reader and myself  i cant get into more on Network staff that Mr Tayfun 
told us because there is still a lot to write but I'm going to mention about RESTful Web Services a bit.</p>


<p>Rest is stands for REprsestial State Transfer which is a web standarts based architechture and uses
HTTP protocol for data communucation.In REST architecture, a REST Server simply provides access to resources and REST client accesses and presents the resources.</p>


<h4>HTTP Methods</h4>


<p>Following well known HTTP methods are commonly used in REST based architecture. </p>


<ul>
    <li>GET - Provides a read only access to a resource.</li>
    <li>PUT - Used to create a new resource.</li>
    <li>DELETE - Used to remove a resource.</li>
    <li>POST - Used to update a existing resource or create a new resource.</li>
</ul>


<p> <p> We learned this because rails routing system is usin these protocols to access and transfer data
between controllers and views.</p></p>

<p>In the second part of the workshop we started meet lab2023's gems and learned its production
conventions.I mean we started with the one gem but it was enough to blow my mind.:)I can't say I understand completely,even though, I am gonna try to mention about.The gem I was telling you about is Cybele which is a template for starting web projects made by developers at Lab2023.This is complete template with everything you'll need when you're developing websites.It includes admin and user system and codes you'll need every stage of developing.</p>


<p>We started installing the gem by running the code below;</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem isntall cybele</span></code></pre></td></tr></table></div></figure>


<p>It was easy start we didn't even have a clue about what we're gonna face but we continued and after 
the installing the gem. We installed other dependent gems for the almighty cybele.:)</p>


<p>At this point Mr Akbudak told us what was all the dependent gems are and explained all the gems in the gemfile. Now I am gonna tell what i remmber from that.First we installed redis server.As far as i remember redis was a open-souced data structure server that holds database data.it supports many type of data.</p>


<p>second gem we installed was sidekiq.As I understand sidekiq runs background of the project and keeps
 track and hold every interaction thay users did and save it for security or any other reasons.We usually used for check our changes and look whether they are worked or not.</p>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>rake sidekiq:start</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>We used the code above to start sidekiq to examine  user activities in our app.THen to create 
database  we run the 'rake db:create' command and migrated it.This may look like a few lines to you but we spent hours to install the files and handle all the error we encounter them.Thanks to Mr Akbudak he singlehandedly manage to installation process to our computers and helped us handling  the errors.After the installition he explained all the files regarding to admin system which is another gem called hierapolis.it was a little bit complicated for me when i was tryin myself before this lesson.But i manage to understand how it works now.</p>


<p>At the end of the day i thought i couldn't understand much because it was a bit overwhelming and 
tiring but things i learn was really useful and remarkable.Thanks for the struggle to  try to tell  us.I'm really appreciated for my teacher's efforts.  </p>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[First Post]]></title>
    <link href="//emrullah-arsay.github.io/blog/2016/07/30/first-post/"/>
    <updated>2016-07-30T12:40:36+03:00</updated>
    <id>//emrullah-arsay.github.io/blog/2016/07/30/first-post</id>
    <content type="html"><![CDATA[<p>This is the Post.What did u expect??</p>
]]></content>
  </entry>
  
</feed>
